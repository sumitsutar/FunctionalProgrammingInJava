plugins {
    id 'java-library'
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'io.codearte.nexus-staging' version '0.30.0'
}
group 'com.functional.programming'
version '1.1'
archivesBaseName = "functional-programming"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'
}


ext {
    gitUrl = "https://github.com/sumitsutar/FunctionalProgrammingInJava"
    pomConfig = {
        licenses {
            license {
                name "MIT License"
                url "https://opensource.org/licenses/MIT"
                distribution "repo"
            }
        }

        developers {
            developer {
                id "sumitsutar"
                name "Sumit Sutar"
                email "sutar.sumit@outlook.com"
            }
        }

        scm {
            url project.ext.gitUrl
        }
    }
}

nexusPublishing {
    packageGroup = "io.github.sumitsutar"
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/staging"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("OSSRH_USERNAME")
            password = System.getenv("OSSRH_PASSWORD")
        }
    }
}

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/" //required only for projects registered in Sonatype after 2021-02-24
    packageGroup = "io.github.sumitsutar" //optional if packageGroup == project.getGroup()
    username = System.getenv("OSSRH_USERNAME")
    password = System.getenv("OSSRH_PASSWORD")
}

